Project Structure

project-root
├── src
│   ├── main
│   │   ├── java
│   │   │   ├── api
│   │   │   │   ├── endpoints
│   │   │   │   │   └── UserEndPoints.java
│   │   │   │   └── payload
│   │   │   │       └── User.java
│   │   │   └── utilities
│   │   │       ├── ConfigReader.java
│   │   │       ├── ExcelUtils.java
│   │   │       └── LogHelper.java
│   │   └── resources
│   │       └── config.properties
│   ├── test
│   │   ├── java
│   │   │   ├── runners
│   │   │   │   └── TestRunner.java
│   │   │   ├── stepDefinitions
│   │   │   │   ├── CreateUserStepDefinitions.java
│   │   │   │   ├── DeleteUserStepDefinitions.java
│   │   │   │   └── Hooks.java
│   │   │   └── testData
│   │   │       └── UserDataProvider.java
│   │   └── resources
│   │       └── features
│   │           ├── create_user.feature
│   │           └── delete_user.feature
│   └── logs
│       └── (generated log files)
└── pom.xml




1. Create Maven Project
2. Add Dependencies
	Rest assured
	Jason path - rest assured
	org.jason	
	org.testng
	com.github.scribejava
	json-schema-validator
	Java faker - GitHub - if we want to generate fake data
	extentreports
	POI
	poi-ooxml
Help> Marketplace> Install TestNG
	
3. Create Folder Structure
4. Create Routes.java - contains URL
5. Create User Endpoints.java - CRUD method implementation (Create Read Update Delete)
6. Create Test Case
7. Create Data driven test
	Excel Sheet data
	ExcelUtility
	Data Providers
8.Roports
	Extent Report utility
	Create TestNG.xml file 
9.Add Logs
	Log4J2 Dependency
	Log4J2.xml
10.Properties File 
11.Running Tests from CMD
	Add Pluggins in pom
		Maven surefire plugin
		Maven compiler plugin
12.Cucumber Setup
	Dependencies	
	
	